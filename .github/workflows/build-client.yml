name: Build client

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/build-client.yml
      - client/**
      - server/constants.json
    tags:
      - 'v*'
  workflow_dispatch:

env:
  TOMATO_VERSION: ${{ github.ref_type == 'tag' && github.ref_name || 'preview' }}

concurrency:
  group: client-build-${{ github.ref_type == 'tag' && github.ref_name || 'preview' }}
  cancel-in-progress: true

jobs:
  build-macos:
    runs-on: macos-11
    name: Build macOS client
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Setup Node v18
        uses: actions/setup-node@v3
        with:
          node-version: 18
      -
        name: Build package
        shell: bash
        run: |
          cd client
          npm clean-install
          npm run build
          npx electron-forge make --arch universal --platform darwin
          mv -v out/make/zip/darwin/universal/*.zip "../tomato-client-${TOMATO_VERSION}-macos.zip"
      -
        name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: tomato-client-${{ env.TOMATO_VERSION }}-build
          path: tomato-client-${{ env.TOMATO_VERSION }}-macos.zip
          retention-days: 2

  build-win32:
    runs-on: windows-2022
    name: Build Windows client
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Setup Node v18
        uses: actions/setup-node@v3
        with:
          node-version: 18
      -
        name: Build package
        shell: bash
        run: |
          cd client
          npm config set script-shell $(which bash)
          npm clean-install
          npm run build
          npx electron-forge make --arch x64 --platform win32
          mv -v out/make/zip/win32/x64/*.zip "../tomato-client-${TOMATO_VERSION}-windows.zip"
      -
        name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: tomato-client-${{ env.TOMATO_VERSION }}-build
          path: tomato-client-${{ env.TOMATO_VERSION }}-windows.zip
          retention-days: 2

  build-linux-debian:
    runs-on: ubuntu-22.04
    name: Build Linux client (Debian/Ubuntu)
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Setup Node v18
        uses: actions/setup-node@v3
        with:
          node-version: 18
      -
        name: Build package
        shell: bash
        run: |
          cd client
          npm clean-install
          npm run build
          npx electron-forge make --arch x64 --platform linux
          mv -v out/make/deb/x64/*.deb "../tomato-client-${TOMATO_VERSION}-linux_amd64.deb"
      -
        name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: tomato-client-${{ env.TOMATO_VERSION }}-build
          path: tomato-client-${{ env.TOMATO_VERSION }}-linux_amd64.deb
          retention-days: 2

  build-linux-arch:
    runs-on: ubuntu-22.04
    name: Build Linux client (Arch)
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      -
        name: Setup rootless Docker
        uses: ScribeMD/rootless-docker@0.2.2
      -
        name: Build package
        shell: bash
        # nodejs-lts-hydrogen = Node v18
        run: |
          docker run --rm -v "$PWD:/build" -w /build/client/scripts/arch archlinux:base-devel sh -c 'pacman -Syu --noconfirm nodejs-lts-hydrogen && env EUID=1 makepkg -s --noconfirm'
          mv client/scripts/arch/*.pkg.tar.zst "tomato-client-${TOMATO_VERSION}-linux-x86_64.pkg.tar.zst"
      -
        name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: tomato-client-${{ env.TOMATO_VERSION }}-build
          path: tomato-client-${{ env.TOMATO_VERSION }}-linux-x86_64.pkg.tar.zst
          retention-days: 2

  tag:
    runs-on: ubuntu-22.04
    name: Tag release
    needs: [build-macos, build-win32, build-linux-debian, build-linux-arch]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: tomato-client-${{ env.TOMATO_VERSION }}-build
          path: release-files
      -
        name: Remove old preview release
        if: github.ref_type != 'tag'
        uses: dev-drprasad/delete-tag-and-release@v0.2.1
        with:
          delete_release: true
          tag_name: preview-build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Wait for old preview release deletion
        if: github.ref_type != 'tag'
        shell: bash
        run: |
          sleep 30s
      -
        name: Tag and upload release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "./release-files/*"
          name: ${{ github.ref_type == 'tag' && format('Tomato Release {0}', env.TOMATO_VERSION) || 'Tomato Preview Build' }}
          body: ${{ github.ref_type != 'tag' && 'This development preview build may not be safe. Use it at your own risk.' || '' }}
          tag: ${{ github.ref_type == 'tag' && github.ref_name || 'preview-build' }}
          prerelease: ${{ github.ref_type != 'tag' }}
          token: ${{ secrets.GITHUB_TOKEN }}
