# Generated by Django 4.2.6 on 2023-10-23 23:44

import datetime
import dirtyfields.dirtyfields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import tomato.models.asset
import tomato.models.base


class Migration(migrations.Migration):
    dependencies = [
        ("tomato", "0004_single_play_rotators"),
    ]

    operations = [
        migrations.CreateModel(
            name="SavedAssetFile",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("file", models.FileField(max_length=120, upload_to="")),
                ("original_filename", models.CharField(max_length=120)),
            ],
        ),
        migrations.AlterField(
            model_name="asset",
            name="created_at",
            field=models.DateTimeField(
                db_index=True, default=django.utils.timezone.localtime, verbose_name="created at"
            ),
        ),
        migrations.AlterField(
            model_name="asset",
            name="file",
            field=tomato.models.base.AudioFileField(
                max_length=120, upload_to=tomato.models.asset.asset_upload_to, verbose_name="audio file"
            ),
        ),
        migrations.AlterField(
            model_name="rotator",
            name="created_at",
            field=models.DateTimeField(
                db_index=True, default=django.utils.timezone.localtime, verbose_name="created at"
            ),
        ),
        migrations.AlterField(
            model_name="stopset",
            name="created_at",
            field=models.DateTimeField(
                db_index=True, default=django.utils.timezone.localtime, verbose_name="created at"
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="created_at",
            field=models.DateTimeField(
                db_index=True, default=django.utils.timezone.localtime, verbose_name="created at"
            ),
        ),
        migrations.CreateModel(
            name="AssetAlternate",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "created_at",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.localtime, verbose_name="created at"
                    ),
                ),
                (
                    "file",
                    tomato.models.base.AudioFileField(
                        max_length=120, upload_to=tomato.models.asset.asset_upload_to, verbose_name="audio file"
                    ),
                ),
                ("original_filename", models.CharField(max_length=120)),
                ("pre_process_md5sum", models.BinaryField(default=None, max_length=16, null=True)),
                ("md5sum", models.BinaryField(default=None, max_length=16, null=True)),
                ("filesize", models.BigIntegerField(default=-1)),
                (
                    "status",
                    models.SmallIntegerField(
                        choices=[(0, "Pending processing"), (1, "Processing"), (2, "Ready")],
                        default=0,
                        help_text="All assets will be processed after uploading.",
                    ),
                ),
                ("duration", models.DurationField(default=datetime.timedelta(0))),
                (
                    "asset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alternates",
                        to="tomato.asset",
                        verbose_name="alternate for asset",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
            ],
            options={
                "verbose_name": "audio asset alternate",
                "db_table": "asset_alternates",
                "ordering": ("id",),
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
    ]
